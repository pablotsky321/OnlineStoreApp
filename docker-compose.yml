version: '3.8'

services:
  gateway:
    container_name: gateway-container
    image: gateway
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    environment:
      CONFIG_URI: http://config-server:8888
      EUREKA_URI: http://eureka-server:8081/eureka/
      MICROSERVICE_USER_URI: http://microservice-user:8090
      MICROSERVICE_PRODUCTO_URI: http://microservice-producto:8092
      MICROSERVICE_ORDENES_URI: http://microservice-ordenes:8091
    restart: on-failure
    networks:
      - alonetwork
    depends_on:
       config-server:
         condition: service_healthy
       eureka-server:
         condition: service_healthy

  microservice-producto:
    container_name: microservice-producto-container
    image: microservice-producto
    build:
      context: ./microservice-producto
      dockerfile: Dockerfile
    ports:
      - 8092:8092
    environment:
      CONFIG_URI: http://config-server:8888
      EUREKA_URI: http://eureka-server:8081/eureka/
    restart: on-failure
    networks:
      - alonetwork
    depends_on:
       config-server:
         condition: service_healthy
       eureka-server:
         condition: service_healthy

  microservice-user:
    container_name: microservice-user-container
    image: microservice-user
    build:
      context: ./microservice-user
      dockerfile: Dockerfile
    ports:
      - 8090:8090
    environment:
      CONFIG_URI: http://config-server:8888
      EUREKA_URI: http://eureka-server:8081/eureka/
    restart: on-failure
    networks:
      - alonetwork
    depends_on:
        config-server:
          condition: service_healthy
        eureka-server:
          condition: service_healthy

  microservice-ordenes:
    container_name: microservice-ordenes-container
    image: microservice-ordenes
    build:
      context: ./microservice-ordenes
      dockerfile: Dockerfile
    ports:
      - 8091:8091
    environment:
      CONFIG_URI: http://config-server:8888
      EUREKA_URI: http://eureka-server:8081/eureka/
    restart: on-failure
    networks:
      - alonetwork
    depends_on:
       config-server:
         condition: service_healthy
       eureka-server:
         condition: service_healthy

  eureka-server:
    container_name: eureka-server-container
    image: eureka-server
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    ports:
      - 8081:8081
    environment:
      CONFIG_URI: http://config-server:8888
    restart: on-failure
    networks:
      - alonetwork
    depends_on:
       config-server:
         condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8081/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 1

  config-server:
    container_name: config-server-container
    image: config-server
    build:
      context: ./config-server
      dockerfile: Dockerfile
    ports:
      - 8888:8888
    restart: on-failure
    networks:
      - alonetwork
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8888/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 1

networks:
  alonetwork:
    driver: bridge